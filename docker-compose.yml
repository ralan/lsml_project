version: "3"

services:
    lsml_project:
        image: lsml_project
        build: app
        container_name: lsml_project
        ports:
            - "${APP_PORT:-80}:80"
        volumes:
            - ./app:/opt/app
        environment:
            - ENV_TYPE=${ENV_TYPE:-prod}
            - BROKER_HOST=${BROKER_HOST:-lsml_project_broker}
            - REDIS_HOST=${REDIS_HOST:-lsml_project_redis}
            - SENTRY_DSN
        depends_on:
            - lsml_project_broker
            - lsml_project_redis
            - lsml_project_workers
        restart: always

    lsml_project_workers:
        image: lsml_project
        build: app
        container_name: lsml_project_workers
        command: workers
        volumes:
            - ./app:/opt/app
        environment:
            - ENV_TYPE=${ENV_TYPE:-prod}
            - BROKER_HOST=${BROKER_HOST:-lsml_project_broker}
            - REDIS_HOST=${REDIS_HOST:-lsml_project_redis}
            - SENTRY_DSN
        depends_on:
            - lsml_project_broker
            - lsml_project_redis
        restart: always

    lsml_project_db:
        image: lsml_project_db
        build: db
        container_name: lsml_project_db
        volumes:
            - ${DOCKER_VOLUMES:-~/docker_volumes}/lsml_project/db/lib:/var/lib/mysql
        environment:
            # - MYSQL_ALLOW_EMPTY_PASSWORD=1
            - MYSQL_ROOT_PASSWORD
        restart: always

    lsml_project_broker:
        image: lsml_project_broker
        build: broker
        container_name: lsml_project_broker
        volumes:
            - ${DOCKER_VOLUMES:-~/docker_volumes}/lsml_project/broker/lib:/var/lib/rabbitmq
        restart: always

    lsml_project_redis:
        image: redis
        container_name: lsml_project_redis
        volumes:
            - ${DOCKER_VOLUMES:-~/docker_volumes}/lsml_project/redis:/data
        restart: always

    lsml_project_mlflow_server:
        image: lsml_project_mlflow_server
        build: mlflow_server
        container_name: lsml_project_mlflow_server
        environment:
            - DB_HOST=${DB_HOST:-lsml_project_db}
            - DB_USER=${DB_USER:-root}
            - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
        ports:
            - "${MLFLOW_SERVER_PORT:-5000}:5000"
        depends_on:
            - lsml_project_db
        restart: always

    lsml_project_mlflow_invocator:
        image: lsml_project
        build: app
        container_name: lsml_project_mlflow_invocator
        command: mlflow_invocator
        volumes:
            - ./app:/opt/app
        environment:
            - ENV_TYPE=${ENV_TYPE:-prod}
            - BROKER_HOST=${BROKER_HOST:-lsml_project_broker}
            - SENTRY_DSN
            - MLFLOW_SERVER_HOST
            - MLFLOW_SERVER_PORT
        ports:
            - "${MLFLOW_INVOCATOR_PORT:-5005}:5005"
        depends_on:
            - lsml_project_mlflow_server
        restart: always